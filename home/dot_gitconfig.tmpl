[user]
	name = {{ .name }}
	email = {{ .email }}

[commit]
	gpgsign = true

[pull]
	rebase = false

[push]
	autoSetupRemote = true

[diff]
    tool = default-difftool

[difftool "default-difftool"]
    cmd = code --wait --diff $LOCAL $REMOTE

[merge]
    tool = code

[mergetool "code"]
    cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED

[alias]
{{- if eq .machineType "work" }}
    deploy-prerelease = !git tag -f deploy-prerelease && git push origin deploy-prerelease --no-verify && git tag -d deploy-prerelease && git prerelease-version
    prerelease-version=!echo $(cat package.json | jq -r .version)-alpha.$(git rev-parse --short HEAD)
    deploy-patch = !git tag -f deploy-patch && git push origin deploy-patch --no-verify && git tag -d deploy-patch
    deploy-minor = !git tag -f deploy-minor && git push origin deploy-minor --no-verify && git tag -d deploy-minor
    deploy-major = !git tag -f deploy-major && git push origin deploy-major --no-verify && git tag -d deploy-major
{{- end }}

    # Simple worktree operations
    wtl = worktree list
    wtp = worktree prune
    wtr = worktree remove
      
    # Add remote branch as new worktree
    wtarb = "!f() { git worktree add --track -b \"$1\" \"$1\" \"origin/$1\"; }; f"
      
    # Add new branch as worktree
    wtanb = "!f() { \
      if [ $# -ge 2 ]; then \
        git worktree add -b \"$1\" \"$1\" \"$2\"; \
      else \
        git worktree add -b \"$1\" \"$1\"; \
      fi; \
    }; f"
      
    # Add existing branch as worktree
    wtaeb = "!f() { \
      path=${2:-$1}; \
      git worktree add \"$path\" \"$1\"; \
    }; f"
      
    # Remove worktree and delete branch
    wtrd = "!f() { git worktree remove \"$1\" && git branch -D \"$1\"; }; f"
